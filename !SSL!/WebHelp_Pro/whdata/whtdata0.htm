<html dir="ltr">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="generator" content="Adobe RoboHelp 2015" />
<meta name="description" content="WebHelp 5.50" />
</head>
<body>
<script  src="whtdata.js" charset="utf-8"></script>
<script language="javascript">
<!--
 aTE(1,45,"General References");
   aTE(1,2,"Introduction");
     aTE(2,0,"System Overview","System_Overview.htm");
     aTE(2,0,"Supported Parameters","Supported_Parameters1.htm");
   aTE(1,41,"Decoding Subsystem");
     aTE(2,0,"Organization","Organization.htm");
     aTE(2,0,"Reading Decoded Data","Reading_Decoded_Data.htm");
     aTE(1,2,"Data Symbology");
       aTE(2,0,"Symbology Identification","Symbology_Identification.htm");
       aTE(2,0,"Datalogic Label Identifiers","Datalogic_Label_Identifiers.htm");
     aTE(1,35,"Decoding Parameters");
       aTE(2,0,"Overview","Overview.htm");
       aTE(2,0,"General System Definitions","Programming_Codes_without_Parameters1.htm");
       aTE(2,0,"General Decoding Definitions","General_Decoding_Definitions.htm");
       aTE(1,19,"Bar Code Parameters");
         aTE(2,0,"Codabar","Codabar.htm");
         aTE(2,0,"Code 39","Code_39.htm");
         aTE(2,0,"Pharmacode 39 (Code 32)","Pharmacode_39_(Code_32).htm");
         aTE(2,0,"Trioptic","Trioptic.htm");
         aTE(2,0,"Code 93","Code_93.htm");
         aTE(2,0,"Code 128","Code_128.htm");
         aTE(2,0,"European Article Numbering-13 (EAN-13)","European_Article_Numbering-13_(EAN-13).htm");
         aTE(2,0,"European Article Numbering-8 (EAN-8)","European_Article_Numbering-8_(EAN-8).htm");
         aTE(2,0,"Universal Product Code-A (UPC-A)","Universal_Product_Code-A_(UPC-A).htm");
         aTE(2,0,"Universal Product Code-E (UPC-E)","Universal_Product_Code-E_(UPC-E).htm");
         aTE(2,0,"UPC / EAN Extensions","UPC___EAN_Extensions.htm");
         aTE(2,0,"Interleaved 2 of 5","Interleaved_2_of_5.htm");
         aTE(2,0,"Standard 2 of 5","Standard_2_of_5.htm");
         aTE(2,0,"Matrix 2 of 5","Matrix_2_of_5.htm");
         aTE(2,0,"MSI","MSI.htm");
         aTE(2,0,"GS1 Databar-14","GS1_Databar-14.htm");
         aTE(2,0,"GS1 Databar Limited","GS1_Databar_Limited.htm");
         aTE(2,0,"GS1 Databar Expanded","GS1_Databar_Expanded.htm");
         aTE(2,0,"Chinese 2 of 5 (China Post)","Html/Chinese_2_of_5_(China_Post).htm");
       aTE(1,7,"Programmable 2D Symbologies");
         aTE(2,0,"Aztec Code","Aztec_Code.htm");
         aTE(2,0,"Datamatrix","Datamatrix.htm");
         aTE(2,0,"Composite","Composite.htm");
         aTE(2,0,"Maxicode","Maxicode.htm");
         aTE(2,0,"PDF 417","PDF_417.htm");
         aTE(2,0,"MicroPDF 417","MicroPDF_417.htm");
         aTE(2,0,"QR Code","QR_Code.htm");
       aTE(1,1,"Postal Codes");
         aTE(2,0,"Postal Codes","Postal_Codes1.htm");
       aTE(1,1,"Imaging Controls");
         aTE(2,0,"Imaging Controls","Imaging_Controls.htm");
 aTE(1,292,"C SDK");
   aTE(2,0,"API History","SDK_C_Introduction.htm");
   aTE(2,0,"Compiling and Linking","Compiling_and_Linking1.htm");
   aTE(1,7,"Beacon API");
     aTE(1,1,"Defined Values");
       aTE(2,0,"Beacon Constants","Beacon_Constants.htm");
     aTE(1,4,"Function Reference");
       aTE(2,0,"BeaconStartScan","BeaconStartScan.htm");
       aTE(2,0,"BeaconStopScan","BeaconStopScan.htm");
       aTE(2,0,"BeaconFlush","BeaconFlush.htm");
       aTE(2,0,"BeaconGetData","BeaconGetData.htm");
   aTE(1,21,"Bluetooth API");
     aTE(1,3,"Data Structures");
       aTE(2,0,"BT_DISCOVERY_INFO,  *BT_DISCOVERY_INFO","Html/BT_DISCOVERY_INFO,__BT_DISCOVERY_INFO.htm");
       aTE(2,0,"BTPAIR, *P_BTPAIR","BTPAIR,_P_BTPAIR.htm");
       aTE(2,0,"BT_DEVICE,  *BT_DEVICE","Html/BT_DEVICE,__BT_DEVICE.htm");
     aTE(1,3,"Defined Values");
       aTE(2,0,"Bluetooth Constants","Bluetooth_Constants_api2.htm");
       aTE(2,0,"Profile Definitions","Profile_Definitions.htm");
       aTE(2,0,"BTDIRECT","BTDIRECT.htm");
     aTE(1,12,"Function Reference");
       aTE(2,0,"BtClearAllPairings","BtClearAllPairings.htm");
       aTE(2,0,"BtClearSerialPairing","BtClearSerialPairing.htm");
       aTE(2,0,"BtCreatePairing","BtCreatePairing.htm");
       aTE(2,0,"BtCreateSerialPairing","BtCreateSerialPairing1.htm");
       aTE(2,0,"BtDiscoverSerialDevices","Html/BtDiscoverSerialDevice.htm");
       aTE(2,0,"BtEnable","BtEnable1.htm");
       aTE(2,0,"BtGetPairingCount","BtGetPairingCount1.htm");
       aTE(2,0,"BtGetPairingInfo","BtGetPairingInfo1.htm");
       aTE(2,0,"BtGetRadioInfo","BtGetRadioInfo.htm");
       aTE(2,0,"BtInitialize","BtInitialize1.htm");
       aTE(2,0,"BtStatus","BtStatus1.htm");
       aTE(2,0,"BtTerminate","BtTerminate1.htm");
   aTE(1,4,"Common API");
     aTE(1,3,"Defined Values");
       aTE(2,0,"Misc Constants","CommonApiConstants.htm");
       aTE(2,0,"Input Data Types","InputDataTypes.htm");
       aTE(2,0,"Trigger Masks","TriggerMasks.htm");
   aTE(1,62,"Decode API");
     aTE(1,2,"Data Structures");
       aTE(2,0,"DCD_PARAM","DCD_PARAM.htm");
       aTE(2,0,"DCD_PARAM_LIMIT","DCD_PARAM_LIMIT.htm");
     aTE(1,12,"Defined Values");
       aTE(2,0,"Device Capabilities Mask","Device_Capabilities_Mask.htm");
       aTE(2,0,"Device Enumeration","Device_Enumeration.htm");
       aTE(2,0,"Input Data Types Mask","Input_Data_Types_Mask.htm");
       aTE(2,0,"Wedge Type Mask","Wedge_Type_Mask.htm");
       aTE(2,0,"Parameter Limit Bits","Parameter_Limit_Bits.htm");
       aTE(2,0,"Request Types","Request_Types.htm");
       aTE(2,0,"Good Read Beep Types","Good_Read_Beep_Types.htm");
       aTE(2,0,"Trigger Identification Masked Values","Trigger_Identification_Masked_Values.htm");
       aTE(2,0,"CODE_ID Modifiers","CODE_ID_Modifiers.htm");
       aTE(2,0,"QR Code Encoding Formats","Html/QR_Code_Encoding_Formats.htm");
       aTE(2,0,"1D Inverse Label Types","1D_Inverse_Label_Types.htm");
       aTE(2,0,"Datamatrix DPM mode settings","Datamatrix_DPM_mode_settings.htm");
     aTE(1,1,"Enumerations");
       aTE(2,0,"CODE_ID","CODE_ID.htm");
     aTE(2,0,"Error Codes","Error_Codes.htm");
     aTE(1,42,"Function Reference");
       aTE(2,0,"DecodeCancelNotifyPress","DecodeCancelNotifyPress.htm");
       aTE(2,0,"DecodeCancelNotifyRelease","DecodeCancelNotifyRelease.htm");
       aTE(2,0,"DecodeCancelNotifyStart","DecodeCancelNotifyStart.htm");
       aTE(2,0,"DecodeCancelNotifyStop","DecodeCancelNotifyStop.htm");
       aTE(2,0,"DecodeCancelRequest","DecodeCancelRequest.htm");
       aTE(2,0,"DecodeEnumDevices","DecodeEnumDevices.htm");
       aTE(2,0,"DecodeFlushData","DecodeFlushData.htm");
       aTE(2,0,"DecodeGetCodeID","DecodeGetCodeID.htm");
       aTE(2,0,"DecodeGetCodeIDMod","DecodeGetCodeIDMod.htm");
       aTE(2,0,"DecodeGetDeviceCaps","DecodeGetDeviceCaps.htm");
       aTE(2,0,"DecodeGetFriendlyName","DecodeGetFriendlyName.htm");
       aTE(2,0,"DecodeGetParam","DecodeGetParam.htm");
       aTE(2,0,"DecodeGetParamLimits","DecodeGetParamLimits.htm");
       aTE(2,0,"DecodeGetParams","DecodeGetParams.htm");
       aTE(2,0,"DecodeGetParamLength","DecodeGetParamLength.htm");
       aTE(2,0,"DecodeGetParamString","DecodeGetParamString.htm");
       aTE(2,0,"DecodeGetWedge","DecodeGetWedge.htm");
       aTE(2,0,"DecodeGetXMLParams","DecodeGetXMLParams.htm");
       aTE(2,0,"DecodeGoodRead","DecodeGoodRead.htm");
       aTE(2,0,"DecodePostPressEvent","DecodePostPressEvent.htm");
       aTE(2,0,"DecodePostPressMsg","DecodePostPressMsg.htm");
       aTE(2,0,"DecodePostReleaseEvent","DecodePostReleaseEvent.htm");
       aTE(2,0,"DecodePostReleaseMsg","DecodePostReleaseMsg.htm");
       aTE(2,0,"DecodePostRequestEvent","DecodePostRequestEvent.htm");
       aTE(2,0,"DecodePostRequestEventEx","DecodePostRequest_Event_and_Msg_Ex.htm");
       aTE(2,0,"DecodePostRequestMsg","DecodePostRequestMsg.htm");
       aTE(2,0,"DecodePostRequestMsgEx","DecodePostRequestMsgEx.htm");
       aTE(2,0,"DecodePostRequestWait ","DecodePostRequestWait_.htm");
       aTE(2,0,"DecodePostStartEvent","DecodePostStartEvent.htm");
       aTE(2,0,"DecodePostStartMsg","DecodePostStartMsg.htm");
       aTE(2,0,"DecodePostStopEvent","DecodePostStopEvent.htm");
       aTE(2,0,"DecodePostStopMsg","DecodePostStopMsg.htm");
       aTE(2,0,"DecodeReadString ","DecodeReadString_.htm");
       aTE(2,0,"DecodeReadStringEx","DecodeReadStringEx.htm");
       aTE(2,0,"DecodeSetParam","DecodeSetParam.htm");
       aTE(2,0,"DecodeSetParams","DecodeSetParams.htm");
       aTE(2,0,"DecodeSetParamString","DecodeSetParamString.htm");
       aTE(2,0,"DecodeSetWedge","DecodeSetWedge.htm");
       aTE(2,0,"DecodeSetXMLParams","DecodeSetXMLParams.htm");
       aTE(2,0,"DecodeSoftTrigger","DecodeSoftTrigger.htm");
       aTE(2,0,"DecodeSoftTriggerStop","DecodeSoftTriggerStop.htm");
       aTE(2,0,"DecodeTestParams","DecodeTestParams.htm");
   aTE(1,100,"Device API");
     aTE(1,5,"Data Structures");
       aTE(2,0,"BATINFO, *P_BATINFO","BATINFO,_P_BATINFO1.htm");
       aTE(2,0,"BAT_THRESHOLD, *P_BAT_THRESHOLD","BAT_THRESHOLD,_P_BAT_THRESHOLD.htm");
       aTE(2,0,"DEVICE_METRICS","DEVICE_METRICS.htm");
       aTE(2,0,"CUSTOM_KEY","CUSTOM_KEY.htm");
       aTE(2,0,"GACC_DATA","GACC_DATA.htm");
     aTE(1,23,"Defined Values");
       aTE(2,0,"Backlight Brightness ","The_backlight_brightness_values.htm");
       aTE(2,0,"Backlight Enable","The_backlight_enable_values.htm");
       aTE(2,0,"Battery Level Error","Battery_Level_Error.htm");
       aTE(2,0,"Beep Time","Beep_Time.htm");
       aTE(2,0,"Beep Tone","Beep_Tone.htm");
       aTE(2,0,"Boot Types ","The_Boot_Types.htm");
       aTE(2,0,"Haptic_ID","Haptic_ID.htm");
       aTE(2,0,"Hardware Options Mask Definitions","Hardware_Options_Mask_Definitions_api2.htm");
       aTE(2,0,"Keyboard Input State Bit definitions","Keyboard_input_state_bit_definitions.htm");
       aTE(2,0,"Keyboard Models","The_Keyboard_model_definitions.htm");
       aTE(2,0,"Keyboard Multitap Delay","Keyboard_multitap_delay_definitions.htm");
       aTE(2,0,"Keyboard Remap Errors","Keyboard_Remap_Error_Definitions.htm");
       aTE(2,0,"Language Families","Language_definitions.htm");
       aTE(2,0,"Led Identifiers","Led_Identifiers_api2.htm");
       aTE(2,0,"Metric Definitions","Metric_Definitions_api2.htm");
       aTE(2,0,"Minimum Input Array Lengths","Minimum_Input_Array_Lengths.htm");
       aTE(2,0,"Operating System Types","Operating_System_type_definitions.htm");
       aTE(2,0,"Product Models","Product_Model_definitions.htm");
       aTE(2,0,"Trigger Action Assignment Bit Definitions","Trigger_action_assignment_values.htm");
       aTE(2,0,"USBFN_CLASS","USBFN_CLASS.htm");
       aTE(2,0,"USBFN_STATE","USBFN_STATE.htm");
       aTE(2,0,"Version Index ","Version_Index_Definitions.htm");
       aTE(2,0,"Virtual Key Code Bit Definitions","The_Virtual_Key_Code_State_Flags.htm");
     aTE(1,69,"Function Reference");
       aTE(2,0,"AccelerometerClose","AccelerometerClose.htm");
       aTE(2,0,"AccelerometerOpen","AccelerometerOpen.htm");
       aTE(2,0,"AccelerometerRead","AccelerometerRead.htm");
       aTE(2,0,"AccelerometerStartEvent","AccelerometerStartEvent.htm");
       aTE(2,0,"AccelerometerStartMsg","AccelerometerStartMsg.htm");
       aTE(2,0,"AccelerometerStop","AccelerometerStop.htm");
       aTE(2,0,"CvtBtStringToAddr","CvtBtStringToAddr.htm");
       aTE(2,0,"DeviceBlinkLED","DeviceBlinkLED.htm");
       aTE(2,0,"DeviceBuzzerStart","DeviceStartBuzzer.htm");
       aTE(2,0,"DeviceBuzzerStop","DeviceStopBuzzer.htm");
       aTE(2,0,"DeviceEnableLED","DeviceEnableLED.htm");
       aTE(2,0,"DeviceEnableModem","DeviceEnableModem.htm");
       aTE(2,0,"DeviceGetACSuspendTimeout","DeviceGetACSuspendTimeout.htm");
       aTE(2,0,"DeviceGetBatteryInfo","DeviceGetBatteryInfo.htm");
       aTE(2,0,"DeviceGetBatteryLevel","DeviceGetBatteryLevel.htm");
       aTE(2,0,"DeviceGetBatterySuspendTimeout","DeviceGetBatterySuspendTimeout.htm");
       aTE(2,0,"DeviceGetBatteryThreshold","DeviceGetBatteryThreshold.htm");
       aTE(2,0,"DeviceGetBootType","DeviceGetBootType.htm");
       aTE(2,0,"DeviceGetExtPowerStatus","DeviceGetExtPowerStatus.htm");
       aTE(2,0,"DeviceGetFlashFileRoot","DeviceGetFlashFileRoot.htm");
       aTE(2,0,"DeviceGetHardwareInfo","DeviceGetHardwareInfo.htm");
       aTE(2,0,"DeviceGetIsInCradle","DeviceGetIsInCradle.htm");
       aTE(2,0,"DeviceGetLanguage","DeviceGetLanguage.htm");
       aTE(2,0,"DeviceGetMetric","DeviceGetMetric.htm");
       aTE(2,0,"DeviceGetModel","DeviceGetModel.htm");
       aTE(2,0,"DeviceGetOSType","DeviceGetOSType.htm");
       aTE(2,0,"DeviceGetSerialNumber","DeviceGetSerialNumber.htm");
       aTE(2,0,"DeviceGetTouchScreenEnable","DeviceGetTouchScreenEnable.htm");
       aTE(2,0,"DeviceGetTriggerType","DeviceGetTriggerType.htm");
       aTE(2,0,"DeviceGetUsbFnDriver","DeviceGetUsbFnDriver.htm");
       aTE(2,0,"DeviceGetVersionCount","DeviceGetVersionCount.htm");
       aTE(2,0,"DeviceGetVersionInfo","DeviceGetVersionInfo.htm");
       aTE(2,0,"DevicePlayBeep","DevicePlayBeep.htm");
       aTE(2,0,"DeviceReset","DeviceReset.htm");
       aTE(2,0,"DeviceSetACSuspendTimeout","DeviceSetACSuspendTimeout.htm");
       aTE(2,0,"DeviceSetBatterySuspendTimeout","DeviceSetBatterySuspendTimeout.htm");
       aTE(2,0,"DeviceSetBatteryThreshold","DeviceSetBatteryThreshold.htm");
       aTE(2,0,"DeviceSetTouchScreenEnable","DeviceSetTouchScreenEnable.htm");
       aTE(2,0,"DeviceSetTriggerType","DeviceSetTriggerType.htm");
       aTE(2,0,"DeviceSetUsbFnDriver","DeviceSetUsbFnDriver.htm");
       aTE(2,0,"DeviceVibrate","PerformHapticFeedback.htm");
       aTE(2,0,"DisplayBkltEnable","DisplayBkltEnable2.htm");
       aTE(2,0,"DisplayGetBkltBrightness","DisplayGetBkltBrightness1.htm");
       aTE(2,0,"DisplayGetBkltState","DisplayGetBkltState1.htm");
       aTE(2,0,"DisplaySetBkltBrightness","DisplaySetBkltBrightness1.htm");
       aTE(2,0,"GPSGetPowerStatus","GPSGetPowerStatus.htm");
       aTE(2,0,"GPSSetPowerState","GPSSetPowerState.htm");
       aTE(2,0,"KeybdCustomClearList","KeybdCustomClearList.htm");
       aTE(2,0,"KeybdCustomGetEnableState","KeybdCustomGetEnableState.htm");
       aTE(2,0,"KeybdCustomGetEntry","KeybdCustomGetEntry.htm");
       aTE(2,0,"KeybdCustomGetList","KeybdCustomGetList.htm");
       aTE(2,0,"KeybdCustomGetListLength","KeybdCustomGetListLength.htm");
       aTE(2,0,"KeybdCustomSetEnableState","KeybdCustomSetEnableState.htm");
       aTE(2,0,"KeybdCustomSetEntry","KeybdCustomSetEntry.htm");
       aTE(2,0,"KeybdCustomSetList","KeybdCustomSetList.htm");
       aTE(2,0,"KeybdGetKeyInputState","KeybdGetKeyInputState1.htm");
       aTE(2,0,"KeybdGetKeymapID","KeybdGetKeymapID.htm");
       aTE(2,0,"KeybdGetMultitapDelay","KeybdGetMultitapDelay.htm");
       aTE(2,0,"KeybdGetType","KeybdGetType.htm");
       aTE(2,0,"KeybdLoadKeymap","KeybdLoadKeymap.htm");
       aTE(2,0,"KeybdSetKeyInputState","KeybdSetKeyInputState.htm");
       aTE(2,0,"KeybdSetMultitapDelay","KeybdSetMultitapDelay.htm");
       aTE(2,0,"PhoneGetPowerStatus","PhoneGetPowerStatus.htm");
       aTE(2,0,"PhoneSetPowerState","PhoneSetPowerState.htm");
       aTE(2,0,"WiFiGetMacAddress","WiFiGetMacAddress.htm");
       aTE(2,0,"WiFiGetPowerStatus","WiFiGetPowerStatus.htm");
       aTE(2,0,"WiFiGetRssi","WiFiGetRssi.htm");
       aTE(2,0,"WiFiGetSignalQuality","WiFiGetSignalQuality.htm");
       aTE(2,0,"WiFiSetPowerState","WiFiSetPowerState.htm");
   aTE(1,16,"Joya Cradle API");
     aTE(1,1,"Data Structures");
       aTE(2,0,"JOYA_CRADLE_STATE_INFO","JOYA_CRADLE_STATE_INFO.htm");
     aTE(1,2,"Defined Values");
       aTE(2,0,"JOYA_CRADLE_LED","JOYA_CRADLE_LED.htm");
       aTE(2,0,"JOYA_CRADLE_LOCK_TYPE","JOYA_CRADLE_LOCK_TYPE.htm");
     aTE(1,10,"Function Reference");
       aTE(2,0,"JoyaCradleGetState","JoyaCradleGetState.htm");
       aTE(2,0,"JoyaCradleGetIsInTrolleyHolder","JoyaCradleGetIsInTrolleyHolder.htm");
       aTE(2,0,"JoyaCradleIsFastChargeEnabled","JoyaCradleIsFastChargeEnabled.htm");
       aTE(2,0,"JoyaCradleLed","JoyaCradleLed.htm");
       aTE(2,0,"JoyaCradleLock","JoyaCradleLock.htm");
       aTE(2,0,"JoyaCradleReadConfigArea","JoyaCradleReadConfigArea.htm");
       aTE(2,0,"JoyaCradleReadCustomArea","JoyaCradleFlashReadCustomArea.htm");
       aTE(2,0,"JoyaCradleReset","JoyaCradleReset.htm");
       aTE(2,0,"JoyaCradleWriteConfigArea","JoyaCradleWriteConfigArea.htm");
       aTE(2,0,"JoyaCradleWriteCustomArea","JoyaCradleFlashWriteCustomArea.htm");
   aTE(1,25,"SoftSpot API");
     aTE(1,1,"Data Structures");
       aTE(2,0,"SoftSpotAction","SoftSpotAction.htm");
     aTE(1,3,"Defined Values");
       aTE(2,0,"SOFTSPOT_ACTION_TYPE","SOFTSPOT_ACTION_TYPE.htm");
       aTE(2,0,"SOFTSPOT_PROPERTY","SOFTSPOT_PROPERTY.htm");
       aTE(2,0,"SOFTSPOT_RESET_STATE","SOFTSPOT_RESET_STATE.htm");
     aTE(1,18,"Function Reference");
       aTE(2,0,"SoftSpotAddAction","SoftSpotAddAction.htm");
       aTE(2,0,"SoftSpotDeleteAction","SoftSpotDeleteAction.htm");
       aTE(2,0,"SoftSpotGetActionList","SoftSpotGetActionList.htm");
       aTE(2,0,"SoftSpotGetActionsCount","SoftSpotGetActionsCount.htm");
       aTE(2,0,"SoftSpotGetLockState","SoftSpotGetLockState.htm");
       aTE(2,0,"SoftSpotGetPosition","SoftSpotGetPosition.htm");
       aTE(2,0,"SoftSpotGetScale","SoftSpotGetScale.htm");
       aTE(2,0,"SoftSpotHide","SoftSpotHide.htm");
       aTE(2,0,"SoftSpotIsRunning","SoftSpotIsRunning.htm");
       aTE(2,0,"SoftSpotLock","SoftSpotLock.htm");
       aTE(2,0,"SoftSpotResetAllActions","SoftSpotResetAllActions.htm");
       aTE(2,0,"SoftSpotSetActionProperty","SoftSpotSetActionProperty.htm");
       aTE(2,0,"SoftSpotSetCurrentAction","SoftSpotSetCurrentAction.htm");
       aTE(2,0,"SoftSpotSetScale","SoftSpotSetScale.htm");
       aTE(2,0,"SoftSpotSetPosition","SoftSpotSetPosition.htm");
       aTE(2,0,"SoftSpotShow","SoftSpotShow.htm");
       aTE(2,0,"SoftSpotStart","SoftSpotStart.htm");
       aTE(2,0,"SoftSpotStop","SoftSpotStop.htm");
   aTE(1,47,"WiFi API");
     aTE(1,13,"Data Structures");
       aTE(2,0,"CF10G_STATUS","CF10G_STATUS.htm");
       aTE(2,0,"CRYPT","CRYPT.htm");
       aTE(2,0,"EAPConnectionConfig","EAPConnectionConfig.htm");
       aTE(2,0,"EAPCredentialsConfig","EAPCredentialsConfig.htm");
       aTE(2,0,"EapConfig - DEPRECATED","EapConfig.htm");
       aTE(2,0,"EAPFASTConfig","EAPFASTConfig_C.htm");
       aTE(2,0,"EAPTLSConfig","EAPTLSConfig_C.htm");
       aTE(2,0,"EAPTTLSConfig","EAPTTLSConfig_C.htm");
       aTE(2,0,"GlobalSettings","GlobalSettings.htm");
       aTE(2,0,"LEAPConfig","LEAPConfig_C.htm");
       aTE(2,0,"PEAPConfig","PEAPConfig_C.htm");
       aTE(2,0,"SDCConfig","SDCConfig.htm");
       aTE(2,0,"WEP_KEY","WEP_KEY.htm");
     aTE(1,9,"Defined Values");
       aTE(2,0,"AUTH","AUTH.htm");
       aTE(2,0,"Constants","WiFiConstants.htm");
       aTE(2,0,"CredentialsSource","CredentialsSource.htm");
       aTE(2,0,"CredentialsType","CredentialsType.htm");
       aTE(2,0,"EapTypes","EapTypes.htm");
       aTE(2,0,"EapInnerMethod","EapInnerMethod.htm");
       aTE(2,0,"Edot11Mode","Edot11Mode.htm");
       aTE(2,0,"ENCRYPTION","ENCRYPTION.htm");
       aTE(2,0,"SDCERR","SDCERR.htm");
     aTE(1,22,"Function Reference");
       aTE(2,0,"WiFiActivateConfig","ActivateConfig.htm");
       aTE(2,0,"WiFiAddConfig","AddConfig.htm");
       aTE(2,0,"WiFiDeleteConfig","DeleteConfig.htm");
       aTE(2,0,"WiFiEnableConfig","WiFiEnableConfig.htm");
       aTE(2,0,"WiFiGetActiveConfig","WiFiGetActiveConfig.htm");
       aTE(2,0,"WiFiGetAllConfigs","GetAllConfigs.htm");
       aTE(2,0,"WiFiGetConfig","GetConfig.htm");
       aTE(2,0,"WiFiGetFirmwareVersion","WiFiGetFirmwareVersion.htm");
       aTE(2,0,"WiFiGetGlobalSettings","WiFiGetGlobalSettings.htm");
       aTE(2,0,"WiFiGetNumConfigs","GetNumConfigs.htm");
       aTE(2,0,"WiFiGetCurrentStatus","GetCurrentStatus.htm");
       aTE(2,0,"WiFiGetGlobalDefaults","WiFiGetGlobalDefaultsC.htm");
       aTE(2,0,"WiFiGetRadioEnable","GetRadioEnable.htm");
       aTE(2,0,"WiFiSetAllConfigs","SetAllConfigs.htm");
       aTE(2,0,"WiFiRadioEnable","RadioEnable.htm");
       aTE(2,0,"WiFiRadioDisable","RadioDisable.htm");
       aTE(2,0,"WiFiSetGlobalSettings","WiFiSetGlobalSettingsC.htm");
       aTE(2,0,"WiFiAddEapConfig - DEPRECATED","AddEapConfig.htm");
       aTE(2,0,"WiFiConnectEap - DEPRECATED","ConnectEap.htm");
       aTE(2,0,"WiFiDeleteEapConfig - DEPRECATED","DeleteEapConfig.htm");
       aTE(2,0,"WiFiDisconnectEap - DEPRECATED","DisconnectEap.htm");
       aTE(2,0,"WiFiInitEapConfig - DEPRECATED","InitEapConfig.htm");
 aTE(1,346,"SDK .NET");
   aTE(1,343,"Namespaces");
     aTE(2,0,"Namespaces List","NS_NamespaceList.htm");
     aTE(1,341,"Datalogic.API");
       aTE(2,0,"DatalogicAPI (namespace)","NS_DatalogicApi.htm");
       aTE(1,279,"Classes");
         aTE(2,0,"Classes List","CL_ClassList.htm");
         aTE(1,15,"Decode");
           aTE(2,0,"Decode (Class)","CL_Decode.htm");
           aTE(2,0,"DecodeGetXMLParams","DecodeGetXMLParams_.htm");
           aTE(2,0,"DecodeSetXMLParams","DecodeSetXMLParams_.htm");
           aTE(2,0,"EnumDevices","MT_Decode_EnumDevices.htm");
           aTE(2,0,"GetParam","MT_Decode_GetParam.htm");
           aTE(2,0,"GetParams","MT_Decode_GetParams.htm");
           aTE(2,0,"GetParamLimits","MT_Decode_GetParamLimits.htm");
           aTE(2,0,"GetParamString","MT_Decode_GetParamString.htm");
           aTE(2,0,"GetWedge","MT_Decode_GetWedge.htm");
           aTE(2,0,"PlayGoodReadBeep","MT_Decode_PlayGoodReadBeep.htm");
           aTE(2,0,"SetParam","MT_Decode_SetParam.htm");
           aTE(2,0,"SetParams","MT_Decode_SetParams.htm");
           aTE(2,0,"SetParamString","MT_Decode_SetParamString.htm");
           aTE(2,0,"SetWedge","MT_Decode_SetWedge.htm");
           aTE(2,0,"TestParams","MT_Decode_TestParams.htm");
         aTE(1,13,"DecodeEvent");
           aTE(2,0,"DecodeEvent (Class)","CL_DecodeEvent.htm");
           aTE(2,0,"DecodeEvent (1)","MT_DecodeEvent_DecodeEvent.htm");
           aTE(2,0,"DecodeEvent (2)","MT_DecodeEvent_DecodeEvent2.htm");
           aTE(2,0,"Dispose","MT_DecodeEvent_Dispose.htm");
           aTE(2,0,"StartScanListener","MT_DecodeEvent_StartScanListener.htm");
           aTE(2,0,"StopScanListener","MT_DecodeEvent_StopScanListener.htm");
           aTE(2,0,"Scanned (event)","EV_DecodeEvent_Scanned.htm");
           aTE(2,0,"ScanPress (event)","EV_DecodeEvent_ScanPress.htm");
           aTE(2,0,"ScanRelease (event)","EV_DecodeEvent_ScanRelease.htm");
           aTE(2,0,"ScanStart (event)","EV_DecodeEvent_ScanStart.htm");
           aTE(2,0,"ScanStop (event)","EV_DecodeEvent_ScanStop.htm");
           aTE(2,0,"TimeOut (event)","EV_DecodeEvent_TimeOut.htm");
           aTE(2,0,"IsListening (property)","PR_DecodeEvent_IsListening.htm");
         aTE(1,3,"DecodeEventArgs");
           aTE(2,0,"DecodeEventArgs (Class)","CL_DecodeEventArgs.htm");
           aTE(2,0,"DecodeEventArgs","MT_DecodeEventArgs_DecodeEventArgs.htm");
           aTE(2,0,"RequestID (property)","PR_DecodeEventArgs_RequestID.htm");
         aTE(1,4,"DecodeException");
           aTE(2,0,"DecodeException (Class)","CL_DecodeException.htm");
           aTE(2,0,"DecodeException (1)","MT_DecodeException_DecodeException.htm");
           aTE(2,0,"DecodeException (2)","MT_DecodeException_DecodeException2.htm");
           aTE(2,0,"DecodeException (3)","MT_DecodeException_DecodeException3.htm");
         aTE(1,26,"DecodeHandle");
           aTE(2,0,"DecodeHandle (Class)","CL_DecodeHandle.htm");
           aTE(2,0,"DecodeHandle (1)","MT_DecodeHandle_DecodeHandle.htm");
           aTE(2,0,"DecodeHandle (2)","MT_DecodeHandle_DecodeHandle2.htm");
           aTE(2,0,"CancelNotifyPress","MT_DecodeHandle_CancelNotifyPress.htm");
           aTE(2,0,"CancelNotifyRelease","MT_DecodeHandle_CancelNotifyRelease.htm");
           aTE(2,0,"CancelNotifyStart","MT_DecodeHandle_CancelNotifyStart.htm");
           aTE(2,0,"CancelNotifyStop","MT_DecodeHandle_CancelNotifyStop.htm");
           aTE(2,0,"CancelRequest","MT_DecodeHandle_CancelRequest.htm");
           aTE(2,0,"Dispose","MT_DecodeHandle_Dispose.htm");
           aTE(2,0,"FlushData","MT_DecodeHandle_FlushData.htm");
           aTE(2,0,"GetAimIdentifier","MT_DecodeHandle_GetAimIdentifier.htm");
           aTE(2,0,"GetCodeId","MT_DecodeHandle_GetCodeId.htm");
           aTE(2,0,"GetDeviceCaps","MT_DecodeHandle_GetDeviceCaps.htm");
           aTE(2,0,"GetFriendlyName","MT_DecodeHandle_GetFriendlyName.htm");
           aTE(2,0,"PostPressMsg","MT_DecodeHandle_PostPressMsg.htm");
           aTE(2,0,"PostReleaseMsg","MT_DecodeHandle_PostReleaseMsg.htm");
           aTE(2,0,"PostRequestMsg","MT_DecodeHandle_PostRequestMsg.htm");
           aTE(2,0,"PostRequestMsgEx","MT_DecodeHandle_PostRequestMsgEx.htm");
           aTE(2,0,"PostRequestWait","MT_DecodeHandle_PostRequestWait.htm");
           aTE(2,0,"PostStartMsg","MT_DecodeHandle_PostStartMsg.htm");
           aTE(2,0,"PostStopMsg","MT_DecodeHandle_PostStopMsg.htm");
           aTE(2,0,"ReadString (1)","MT_DecodeHandle_ReadString2.htm");
           aTE(2,0,"ReadString (2)","MT_DecodeHandle_ReadString.htm");
           aTE(2,0,"ReadString (3)","ReadString_(3).htm");
           aTE(2,0,"SoftTrigger","MT_DecodeHandle_SoftTrigger.htm");
           aTE(2,0,"SoftTriggerStop","MT_DecodeHandle_SoftTriggerStop.htm");
         aTE(1,131,"Device");
           aTE(2,0,"Device (Class)","CL_Device.htm");
           aTE(1,3,"Device.AccEventArgs");
             aTE(2,0,"Device.AccEventArgs (Class)","Device.AccEventArgs_(Class).htm");
             aTE(2,0,"Device.AccEventArgs ","AccEventArgs_(Constructor).htm");
             aTE(2,0,"Data (property)","Data_(property).htm");
           aTE(1,7,"Device.AccStream ");
             aTE(2,0,"DataReady (event)","DataReady_(event).htm");
             aTE(2,0,"Device.AccStream (Class)","Device.AccStream_(Class).htm");
             aTE(2,0,"Device.AccStream (1)","Device.AccStream_(1).htm");
             aTE(2,0,"Device.AccStream (2)","Device.AccStream_(2).htm");
             aTE(2,0,"Dispose","Dispose.htm");
             aTE(2,0,"Enable (property)","Enable_(property).htm");
             aTE(2,0,"Interval (property)","Interval_(property).htm");
           aTE(1,1,"Device Delegates");
             aTE(2,0,"AccDataReady","AccDataReady.htm");
           aTE(1,25,"Device Enumerations");
             aTE(2,0,"Enumerations List","EN_Device_EnumerationList.htm");
             aTE(2,0,"BeepTime","BeepTime.htm");
             aTE(2,0,"BeepTone","BeepTone.htm");
             aTE(2,0,"BootType","EN_Device_BootType.htm");
             aTE(2,0,"BTDirect","EN_Device_BTDirect.htm");
             aTE(2,0,"DeviceModel","EN_Device_DeviceModel.htm");
             aTE(2,0,"DisplayBrightness","EN_Device_DisplayBrightness.htm");
             aTE(2,0,"DisplayBacklight","EN_Device_DisplayBacklight.htm");
             aTE(2,0,"DLKeys","EN_Device_DLKeys.htm");
             aTE(2,0,"HapticId","HapticId.htm");
             aTE(2,0,"HardwareOptions","EN_Device_HardwareOptions.htm");
             aTE(2,0,"KbdMultitapDelay","EN_Device_KbdMultitapDelay.htm");
             aTE(2,0,"KbdRemapError","EN_Device_KbdRemapError.htm");
             aTE(2,0,"KbdState","EN_Device_KbdState.htm");
             aTE(2,0,"KbdType","EN_Device_KbdType.htm");
             aTE(2,0,"Language","EN_Device_Language.htm");
             aTE(2,0,"LEDs","LEDs.htm");
             aTE(2,0,"OperatingSystem","EN_Device_OperatingSystem.htm");
             aTE(2,0,"OSType","EN_Device_OSType.htm");
             aTE(2,0,"PerformanceMetrics","EN_Device_PerformanceMetrics.htm");
             aTE(2,0,"TriggerId","EN_Device_TriggerId.htm");
             aTE(2,0,"TriggerInputType","EN_Device_TriggerInputType.htm");
             aTE(2,0,"UsbFnClass","UsbFnClass.htm");
             aTE(2,0,"UsbFnState","UsbFnState.htm");
             aTE(2,0,"VersionIndex","EN_Device_VersionIndex.htm");
           aTE(1,3,"Device Structs");
             aTE(2,0,"BatteryThreshold","ST_Device_BatteryThreshold.htm");
             aTE(2,0,"DLCustomKey","ST_Device_DLCustomKey.htm");
             aTE(2,0,"AccData","AccData.htm");
           aTE(1,1,"Device.BatteryInfo");
             aTE(2,0,"Device.BatteryInfo (Class)","CL_Device_BatteryInfo.htm");
           aTE(1,2,"Device.BTDevice");
             aTE(2,0,"Device.BTDevice (Class)","Html/Device.BTDevice_(Class).htm");
             aTE(2,0,"Device.BTDevice (1)","Html/Device.BTDevice_(1).htm");
           aTE(1,3,"Device.BTPair");
             aTE(2,0,"Device.BTPair (Class)","CL_Device_BTPair.htm");
             aTE(2,0,"Device.BTPair (1)","MT_Device_BTPair_BTPair.htm");
             aTE(2,0,"Device.BTPair (2)","MT_Device_BTPair_BTPair2.htm");
           aTE(1,2,"Device.DLVersionInfo");
             aTE(2,0,"Device.DLVersionInfo (Class)","CL_Device_DLVersionInfo.htm");
             aTE(2,0,"Device.DLVersionInfo","MT_Device_DLVersionInfo_DLVersionInfo.htm");
           aTE(2,0,"BlinkLED","BlinkLED.htm");
           aTE(2,0,"BtClearAllPairings","MT_Device_BtClearAllPairings.htm");
           aTE(2,0,"BtClearSerialPairing","MT_Device_BtClearSerialPairing.htm");
           aTE(2,0,"BtCreateSerialPairing","MT_Device_BtCreateSerialPairing.htm");
           aTE(2,0,"BtDiscoverSerialDevices","Html/BtDiscoverSerialDevices.htm");
           aTE(2,0,"BtEnable","MT_Device_BtEnable.htm");
           aTE(2,0,"BtGetPairingCount","MT_Device_BtGetPairingCount.htm");
           aTE(2,0,"BtGetPairingInfo","MT_Device_BtGetPairingInfo.htm");
           aTE(2,0,"BtInitialize","MT_Device_BtInitialize.htm");
           aTE(2,0,"BtStatus","MT_Device_BtStatus.htm");
           aTE(2,0,"BtTerminate","MT_Device_BtTerminate.htm");
           aTE(2,0,"DeviceBuzzerStart","DeviceBuzzerStart.htm");
           aTE(2,0,"DeviceBuzzerStop","DeviceBuzzerStop.htm");
           aTE(2,0,"DeviceVibrate","DeviceVibrate.htm");
           aTE(2,0,"DisplayBkltEnable","MT_Device_DisplayBkltEnable.htm");
           aTE(2,0,"DisplayGetBkltBrightness","MT_Device_DisplayGetBkltBrightness.htm");
           aTE(2,0,"DisplayGetBkltState","MT_Device_DisplayGetBkltState.htm");
           aTE(2,0,"DisplaySetBkltBrightness","MT_Device_DisplaySetBkltBrightness.htm");
           aTE(2,0,"EnableLED","EnableLED.htm");
           aTE(2,0,"EnableModem","EnableModem.htm");
           aTE(2,0,"GetACSuspendTimeout","GetACSuspendTimeout.htm");
           aTE(2,0,"GetBatteryInfo","MT_Device_GetBatteryInfo.htm");
           aTE(2,0,"GetBatteryLevel","MT_Device_GetBatteryLevel.htm");
           aTE(2,0,"GetBatterySuspendTimeout","GetBatterySuspendTimeout.htm");
           aTE(2,0,"GetBatteryThreshold","MT_Device_GetBatteryThreshold.htm");
           aTE(2,0,"GetBootType","MT_Device_GetBootType.htm");
           aTE(2,0,"GetExtPowerStatus","MT_Device_GetExtPowerStatus.htm");
           aTE(2,0,"GetFirmwareVersion","MT_Device_GetFirmwareVersion.htm");
           aTE(2,0,"GetFlashFileRoot","MT_Device_GetFlashFileRoot.htm");
           aTE(2,0,"GetGPSPowerStatus","MT_Device_GetGPSPowerStatus.htm");
           aTE(2,0,"GetHardwareInfo","MT_Device_GetHardwareInfo.htm");
           aTE(2,0,"GetIsInCradle","MT_Device_GetIsInCradle.htm");
           aTE(2,0,"GetLanguage","MT_Device_GetLanguage.htm");
           aTE(2,0,"GetMetric","MT_Device_GetMetric.htm");
           aTE(2,0,"GetModel","MT_Device_GetModel.htm");
           aTE(2,0,"GetModelName","MT_Device_GetModelName.htm");
           aTE(2,0,"GetOSType","MT_Device_GetOSType.htm");
           aTE(2,0,"GetOSType2","MT_Device_GetOSType2.htm");
           aTE(2,0,"GetPhonePowerStatus","MT_Device_GetPhonePowerStatus.htm");
           aTE(2,0,"GetReportedVersionsInfo","MT_Device_GetReportedVersionsInfo.htm");
           aTE(2,0,"GetSerialNumber","MT_Device_GetSerialNumber.htm");
           aTE(2,0,"GetTerminalAPIVersion","MT_Device_GetTerminalAPIVersion.htm");
           aTE(2,0,"GetTouchScreenEnable","MT_Device_GetTouchScreenEnable.htm");
           aTE(2,0,"GetTriggerType","MT_Device_GetTriggerType.htm");
           aTE(2,0,"GetUsbFnDriver","GetUsbFnDriver.htm");
           aTE(2,0,"GetWiFiPowerStatus","MT_Device_GetWiFiPowerStatus.htm");
           aTE(2,0,"KeybdCustomGetEnableState","KeybdCustomGetEnableState1.htm");
           aTE(2,0,"KeybdCustomClearList","KeybdCustomClearList1.htm");
           aTE(2,0,"KeybdCustomGetEntry ","KeybdCustomGetEntry_.htm");
           aTE(2,0,"KeybdCustomGetList","KeybdCustomGetList1.htm");
           aTE(2,0,"KeybdCustomSetEnableState","KeybdCustomSetEnableState1.htm");
           aTE(2,0,"KeybdCustomSetEntry","KeybdCustomSetEntry1.htm");
           aTE(2,0,"KeybdCustomSetList","KeybdCustomSetList_NET.htm");
           aTE(2,0,"KeybdGetKeyInputState","MT_Device_KeybdGetKeyInputState.htm");
           aTE(2,0,"KeybdGetKeymapID","MT_Device_KeybdGetKeymapID.htm");
           aTE(2,0,"KeybdGetMultitapDelay","MT_Device_KeybdGetMultitapDelay.htm");
           aTE(2,0,"KeybdGetType","MT_Device_KeybdGetType.htm");
           aTE(2,0,"KeybdLoadKeymap","MT_Device_KeybdLoadKeymap.htm");
           aTE(2,0,"KeybdSetKeyInputState","MT_Device_KeybdSetKeyInputState.htm");
           aTE(2,0,"KeybdSetMultitapDelay","MT_Device_KeybdSetMultitapDelay.htm");
           aTE(2,0,"PlayBeep","PlayBeep.htm");
           aTE(2,0,"Reset","MT_Device_Reset.htm");
           aTE(2,0,"SetACSuspendTimeout","SetACSuspendTimeout.htm");
           aTE(2,0,"SetBatterySuspendTimeout","SetBatterySuspendTimeout.htm");
           aTE(2,0,"SetBatteryThreshold","MT_Device_SetBatteryThreshold.htm");
           aTE(2,0,"SetGPSPowerState","MT_Device_SetGPSPowerState.htm");
           aTE(2,0,"SetPhonePowerState","MT_Device_SetPhonePowerState.htm");
           aTE(2,0,"SetTouchScreenEnable","MT_Device_SetTouchScreenEnable.htm");
           aTE(2,0,"SetTriggerType","MT_Device_SetTriggerType.htm");
           aTE(2,0,"SetUsbFnDriver","SetUsbFnDriver.htm");
           aTE(2,0,"SetWiFiPowerState","MT_Device_SetWiFiPowerState.htm");
           aTE(2,0,"WiFiGetMacAddress","MT_Device_WiFiGetMacAddress.htm");
           aTE(2,0,"WiFiGetRssi","MT_Device_WiFiGetRssi.htm");
           aTE(2,0,"WiFiGetSignalQuality","MT_Device_WiFiGetSignalQuality.htm");
         aTE(1,1,"EAPFASTConfig");
           aTE(2,0,"EAPFASTConfig","EAPFASTConfig.htm");
         aTE(1,1,"EAPTLSConfig");
           aTE(2,0,"EAPTLSConfig","EAPTLSConfig.htm");
         aTE(1,1,"EAPTTLSConfig");
           aTE(2,0,"EAPTTLSConfig","EAPTTLSConfig.htm");
         aTE(1,1,"EapWiFiConfig - DEPRECATED");
           aTE(2,0,"EapWiFiConfig - DEPRECATED","EapWiFiConfigDotNet.htm");
         aTE(1,10,"JoyaCradle");
           aTE(2,0,"JoyaCradleGetState","JoyaCradleGetState_.htm");
           aTE(2,0,"JoyaCradleLock","JoyaCradleLock_.htm");
           aTE(2,0,"JoyaCradleGetIsInTrolleyHolder ","JoyaCradleGetIsInTrolleyHolder_.htm");
           aTE(2,0,"JoyaCradleIsFastChargeEnabled","JoyaCradleIsFastChargeEnabled_.htm");
           aTE(2,0,"JoyaCradleLed ","JoyaCradleLed_.htm");
           aTE(2,0,"JoyaCradleReadConfigArea","JoyaCradleReadConfigArea_.htm");
           aTE(2,0,"JoyaCradleReadCustomArea","JoyaCradleReadCustomArea.htm");
           aTE(2,0,"JoyaCradleReset","JoyaCradleReset_.htm");
           aTE(2,0,"JoyaCradleWriteConfigArea","JoyaCradleWriteConfigArea_.htm");
           aTE(2,0,"JoyaCradleWriteCustomArea","JoyaCradleWriteCustomArea.htm");
         aTE(1,1,"MACAddress");
           aTE(2,0,"MACAddress (class)","MACAddress_(class).htm");
         aTE(1,1,"LEAPConfig");
           aTE(2,0,"LEAPConfig","LEAPConfig.htm");
         aTE(1,1,"Param");
           aTE(2,0,"Param (Class)","CL_Param.htm");
         aTE(1,1,"PEAPConfig");
           aTE(2,0,"PEAPConfig","PEAPConfig.htm");
         aTE(1,1,"SizeConsts");
           aTE(2,0,"SizeConsts (class)","SizeConsts_(class).htm");
         aTE(1,19,"SoftSpot");
           aTE(2,0,"SoftSpot class","SoftSpot_class.htm");
           aTE(2,0,"AddAction","AddAction.htm");
           aTE(2,0,"DeleteAction","DeleteAction.htm");
           aTE(2,0,"GetActionsCount","GetActionsCount.htm");
           aTE(2,0,"GetActionList","GetActionList.htm");
           aTE(2,0,"GetLockState","GetLockState.htm");
           aTE(2,0,"GetScale","GetScale.htm");
           aTE(2,0,"GetPosition","GetPosition.htm");
           aTE(2,0,"Hide","Hide.htm");
           aTE(2,0,"IsRunning","IsRunning.htm");
           aTE(2,0,"Lock","Lock.htm");
           aTE(2,0,"ResetAllActions","ResetAllActions.htm");
           aTE(2,0,"SetActionProperty","SetActionProperty.htm");
           aTE(2,0,"SetCurrentAction","SetCurrentAction.htm");
           aTE(2,0,"SetPosition","SetPosition.htm");
           aTE(2,0,"SetScale","SetScale.htm");
           aTE(2,0,"Show","Show.htm");
           aTE(2,0,"Start","Start.htm");
           aTE(2,0,"Stop","Stop.htm");
         aTE(1,3,"SoftSpotAction");
           aTE(2,0,"SoftSpotAction class","SoftSpotAction_class.htm");
           aTE(2,0,"SoftSpotAction [1]","SoftSpotAction_Constructor_1.htm");
           aTE(2,0,"SoftSpotAction [2]","SoftSpotAction_constructor_2.htm");
         aTE(1,1,"StandardWiFiConfig");
           aTE(2,0,"StandardWiFiConfig (class)","StandardWiFiConfig.htm");
         aTE(1,14,"WiFi");
           aTE(2,0,"WiFi (class)","CL_WiFi.htm");
           aTE(2,0,"ActivateConfig","WiFiActivateConfig.htm");
           aTE(2,0,"AddConfig","WiFiAddConfig.htm");
           aTE(2,0,"DeleteConfig","WiFiDeleteConfig.htm");
           aTE(2,0,"EnableConfig","EnableConfig.htm");
           aTE(2,0,"GetActiveConfig","WiFiGetActiveConfig_DotNet.htm");
           aTE(2,0,"GetAllConfigs","WiFiGetAllConfigs.htm");
           aTE(2,0,"GetConfig","WiFiGetConfig.htm");
           aTE(2,0,"GetCurrentStatus","WiFiGetCurrentStatus.htm");
           aTE(2,0,"GetFirmwareVersion","GetFirmwareVersion.htm");
           aTE(2,0,"GetGlobalDefaults","WiFiGetGlobalDefaults.htm");
           aTE(2,0,"GetGlobalSettings","GetGlobalSettings.htm");
           aTE(2,0,"SetGlobalSettings","WiFiSetGlobalSettings.htm");
           aTE(2,0,"GetNumConfigs","WiFiGetNumConfigs.htm");
         aTE(1,5,"WiFiException");
           aTE(2,0,"WiFiException (Class)","WiFiException_(Class).htm");
           aTE(2,0,"WiFiException (1)","WiFiException_(1).htm");
           aTE(2,0,"WiFiException (2)","WiFiException_(2).htm");
           aTE(2,0,"WiFiException (3)","WiFiException(3).htm");
           aTE(2,0,"WiFiException (4)","WiFiException_(4).htm");
         aTE(1,1,"WiFiGlobalSettings");
           aTE(2,0,"WiFiGlobalSettings (Class)","WiFiGlobalSettings_(Class).htm");
         aTE(1,1,"WiFiStatus");
           aTE(2,0,"WiFiStatus (class)","WiFiStatus_(class).htm");
       aTE(1,7,"Delegates");
         aTE(2,0,"Delegates List","Delegates_List.htm");
         aTE(2,0,"DecodeScanned","DE_DecodeScanned.htm");
         aTE(2,0,"DecodeScanPress","DE_DecodeScanPress.htm");
         aTE(2,0,"DecodeScanRelease","DE_DecodeScanRelease.htm");
         aTE(2,0,"DecodeScanStop","DE_DecodeScanStop.htm");
         aTE(2,0,"DecodeScanStart","DE_DecodeScanStart.htm");
         aTE(2,0,"DecodeTimeOut","DE_DecodeTimeOut.htm");
       aTE(1,37,"Enumerations");
         aTE(2,0,"Enumerations List","EN_EnumerationList.htm");
         aTE(2,0,"Authentication","AuthenticationDotNet.htm");
         aTE(2,0,"BTProfile","BTProfile.htm");
         aTE(2,0,"CodeId","EN_CodeId.htm");
         aTE(2,0,"CodeIdModCode39","CodeIdModCode39.htm");
         aTE(2,0,"CodeIdModStandard25","CodeIdModStandard25.htm");
         aTE(2,0,"CodeIdModInterleaved25","CodeIdModInterleaved25.htm");
         aTE(2,0,"CodeIdModCodabar ","CodeIdModCodabar_.htm");
         aTE(2,0,"CodeIdModCode128 ","CodeIdModCode128_.htm");
         aTE(2,0,"CodeIdModUPC_EAN ","CodeIdModUPC_EAN_.htm");
         aTE(2,0,"CodeIdModMSI ","CodeIdModMSI_.htm");
         aTE(2,0,"CodeIdModMicroPDF417 ","CodeIdModMicroPDF417_.htm");
         aTE(2,0,"CodeIdModQRCode","CodeIdModQRCode.htm");
         aTE(2,0,"CodeIdModMaxiCode ","CodeIdModMaxiCode_.htm");
         aTE(2,0,"CodeIdModDataMatrix ","CodeIdModDataMatrix_.htm");
         aTE(2,0,"CodeIdModComposite ","CodeIdModComposite_.htm");
         aTE(2,0,"CodeIdModAztec ","CodeIdModAztec_.htm");
         aTE(2,0,"CredentialsSource","CredentialsSourceDotNet.htm");
         aTE(2,0,"CredentialsType","CredentialsTypeDotNet.htm");
         aTE(2,0,"DecodeDatamatrixDpm","DecodeDatamatrixDpm.htm");
         aTE(2,0,"DecodeDeviceCap","EN_DecodeDeviceCap.htm");
         aTE(2,0,"DecodeErrorCode","EN_DecodeErrorCode.htm");
         aTE(2,0,"DecodeGoodReadBeepType","EN_DecodeGoodReadBeepType.htm");
         aTE(2,0,"DecodeInputType","EN_DecodeInputType.htm");
         aTE(2,0,"DecodeInverseLabelType","DecodeInverseLabelType.htm");
         aTE(2,0,"DecodeParamLimitIndicator","EN_DecodeParamLimitIndicator.htm");
         aTE(2,0,"DecodeRequest","EN_DecodeRequest.htm");
         aTE(2,0,"DeviceModel","EN_Device_DeviceModel.htm#bc-1");
         aTE(2,0,"EapInnerMethod","EapInnerMethodDotNet.htm");
         aTE(2,0,"EapTypes","EapTypesDotNet.htm");
         aTE(2,0,"Edot11Mode","Edot11ModeDotNet.htm");
         aTE(2,0,"Encryption","EncryptionDotNet.htm");
         aTE(2,0,"ExtPrefixSymbology","ExtPrefixSymbology.htm");
         aTE(2,0,"QRCodeEncoding","Html/QRCodeEncoding.htm");
         aTE(2,0,"SDCErr","SDCErrDotNet.htm");
         aTE(2,0,"WedgeType","EN_WedgeType.htm");
         aTE(2,0,"WlanInterfaceState","WlanInterfaceStateDotNet.htm");
       aTE(1,1,"Interfaces");
         aTE(2,0,"WiFiConfig - DEPRECATED","WiFiConfig.htm");
       aTE(1,11,"Structures");
         aTE(2,0,"Structures List","ST_StructAndOtherLists.htm");
         aTE(2,0,"DecodeParam","ST_DecodeParam.htm");
         aTE(2,0,"DecodeParamLimit","ST_DecodeParamLimit.htm");
         aTE(2,0,"EAPConnectionConfig","EAPConnectionConfig_(struct).htm");
         aTE(2,0,"EAPCredentialsConfig","EAPCredentialsConfig_(struct).htm");
         aTE(2,0,"EAPFASTConfigStruct","EAPFASTConfigStruct_(struct).htm");
         aTE(2,0,"EAPTLSConfigStruct","EAPTLSConfigStruct_(struct).htm");
         aTE(2,0,"EAPTTLSConfigStruct","EAPTTLSConfigStruct_(struct).htm");
         aTE(2,0,"LEAPConfigStruct","LEAPConfigStruct_(struct).htm");
         aTE(2,0,"PEAPConfigStruct","PEAPConfigStruct_(struct).htm");
         aTE(2,0,"SDCConfig","SDCConfig_(struct).htm");
   aTE(1,1,"Examples");
     aTE(2,0,"Examples Table","EXAMPLE_MATRIX.htm");

//-->
</script>
</body>
</html>

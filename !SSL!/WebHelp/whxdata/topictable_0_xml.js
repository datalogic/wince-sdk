gXMLBuffer="<?xml version=\"1.0\" encoding=\"UTF-8\"?><ck><di ky=\"0\" rd=\"1D_Inverse_Label_Types.htm|1D Inverse Label Types\" ct=\"1D  Inverse Label Types     	 	 	 	 		 Defined Value Name 		 Value 		 Description 	 	 		 DCD_INVERSE ...\" bc=\"\"/><di ky=\"1\" rd=\"_CL_Device.htm|DeviceClass\" ct=\"Datalogic .NET SDK Device (Class)   Syntax      public   sealed partial class  Device     Namespace  ...\" bc=\"\"/><di ky=\"2\" rd=\"AccData.htm|AccData\" ct=\"Datalogic .NET SDK AccData  (Struct)   Syntax       [ StructLayoutAttribute ( LayoutKind .Sequential ...\" bc=\"\"/><di ky=\"3\" rd=\"AccDataReady.htm|AccDataReady\" ct=\"Datalogic .NET SDK AccDataReady (delegate)   Syntax       public   delegate   void   AccDataReady ( ...\" bc=\"\"/><di ky=\"4\" rd=\"AccelerometerClose.htm|AccelerometerClose\" ct=\"This function cancels all of the calling application’s requests for Accelerometer data and closes th ...\" bc=\"\"/><di ky=\"5\" rd=\"AccelerometerOpen.htm|AccelerometerOpen\" ct=\"Opens a handle to the Accelerometer GSensor .   HANDLE AccelerometerOpen (LPCWSTR deviceName);     P ...\" bc=\"\"/><di ky=\"6\" rd=\"AccelerometerRead.htm|AccelerometerRead\" ct=\"This reads data that was used to fulfill a request previously posted to the Accelerometer GSensor . ...\" bc=\"\"/><di ky=\"7\" rd=\"AccelerometerStartEvent.htm|AccelerometerStartEvent\" ct=\"This posts a request for data from the Accelerometer GSensor. The function will return immediately,  ...\" bc=\"\"/><di ky=\"8\" rd=\"AccelerometerStartMsg.htm|AccelerometerStartMsg\" ct=\"Request Windows Messages from Accelerometer GSensor .   BOOL AccelerometerStartMsg(HANDLE hAccDevice ...\" bc=\"\"/><di ky=\"9\" rd=\"AccelerometerStop.htm|AccelerometerStop\" ct=\"This function cancels a request previously posted to   the Accelerometer GSensor .   BOOL cdecl Acce ...\" bc=\"\"/><di ky=\"10\" rd=\"AccEventArgs_(Constructor).htm|AccEventArgs (Constructor)\" ct=\"Datalogic .NET SDK AccEventArgs (Constructor)   Syntax   public   AccEventArgs( AccData   data)     ...\" bc=\"\"/><di ky=\"11\" rd=\"ActivateConfig.htm|ActivateConfig\" ct=\"WiFiActivateConfig Sets given profile to  connect and all others not to connect   	 		 SDCERR WiFiAc ...\" bc=\"\"/><di ky=\"12\" rd=\"Add_On.htm|Add On\" ct=\"UPC/EAN/JAN Add On   This property specifies whether 2 or 5 digit supplemental symbols to the right  ...\" bc=\"\"/><di ky=\"13\" rd=\"AddAction.htm|AddAction\" ct=\"Datalogic .NET SDK AddAction   Syntax      public static   UInt32   AddAction(SoftSpotAction newActi ...\" bc=\"\"/><di ky=\"14\" rd=\"addActionListener.htm|addActionListener\" ct=\"  public boolean  addActionListener (Datalogic.SDK.DecodeActionListener listener)   Adds a DecodeAct ...\" bc=\"\"/><di ky=\"15\" rd=\"addActionListener1.htm|addActionListener1\" ct=\"addActionListener   public boolean  addActionListener (Datalogic.SDK.DecodeActionListener listener, ...\" bc=\"\"/><di ky=\"16\" rd=\"AddConfig.htm|AddConfig\" ct=\"WiFiAddConfig Adds a new Wi-Fi connection  profile or modifies one that already exists.   	 		 SDCER ...\" bc=\"\"/><di ky=\"17\" rd=\"AddEapConfig.htm|AddEapConfig\" ct=\"D EPRECATED This function is present in the SDK, but the  WiFiAddConfig()   should be used with a  S ...\" bc=\"\"/><di ky=\"18\" rd=\"APIEnum.htm|APIEnum\" ct=\"Class APIEnum   public class APIEnum extends java.lang.Object   APIEnum contains terminal related co ...\" bc=\"\"/><di ky=\"19\" rd=\"assignImageBuffer.htm|assignImageBuffer\" ct=\"  public boolean  assignImageBuffer ()   This will assign the internal DecodeHandle buffer for image ...\" bc=\"\"/><di ky=\"20\" rd=\"AUTH.htm|AUTH\" ct=\"Authentication types   	 	 	 	 		 Name 		 Value 		 Description 	 	 		 OPEN 		 0 		   	 	 		 SHARED 	 ...\" bc=\"\"/><di ky=\"21\" rd=\"AuthenticationDotNet.htm|Authentication\" ct=\"Datalogic .NET SDK Authentication      (Enumeration)   	 Namespace                :  	  Datalogic.AP ...\" bc=\"\"/><di ky=\"22\" rd=\"Aztec_Code.htm|Aztec Code\" ct=\"    Code Parameter Description I.D.# C/C++ Define Accept. Input Defaults Scanner Type Min Max Factor ...\" bc=\"\"/><di ky=\"23\" rd=\"AZTEC_ENABLE.htm|AZTEC_ENABLE\" ct=\"  public static final int  AZTEC_ENABLE   Constant Field Value: 2840 ...\" bc=\"\"/><di ky=\"24\" rd=\"AZTEC_ENABLE_RUNES.htm|AZTEC_ENABLE_RUNES\" ct=\"  public static final int  AZTEC_ENABLE_RUNES   Constant Field Value: 2842 ...\" bc=\"\"/><di ky=\"25\" rd=\"AZTEC_MAX_LENGTH.htm|AZTEC_MAX_LENGTH\" ct=\"  public static final int  AZTEC_MAX_LENGTH   Constant Field Value: 2861 ...\" bc=\"\"/><di ky=\"26\" rd=\"AZTEC_MIN_LENGTH.htm|AZTEC_MIN_LENGTH\" ct=\"  public static final int  AZTEC_MIN_LENGTH   Constant Field Value: 2860 ...\" bc=\"\"/><di ky=\"27\" rd=\"AZTEC_USER_ID.htm|AZTEC_USER_ID\" ct=\"  public static final int  AZTEC_USER_ID   Constant Field Value: 2863 ...\" bc=\"\"/><di ky=\"28\" rd=\"Barcode_Library.htm|Barcode Library\" ct=\"  It gives the possibility to enable/disable the barcode library. When enabled, the captured image i ...\" bc=\"\"/><di ky=\"29\" rd=\"BAT_THRESHOLD,_P_BAT_THRESHOLD.htm|BAT_THRESHOLD, P_BAT_THRESHOLD\" ct=\"BAT_THRESHOLD, *P_BAT_THRESHOLD   The structure holds main battery threshold information.   Please r ...\" bc=\"\"/><di ky=\"30\" rd=\"BATINFO,_P_BATINFO1.htm|BATINFO, P_BATINFO1\" ct=\"BATINFO, *P_BATINFO   The structure holds the Smart Battery information.   Please refer to  Defined  ...\" bc=\"\"/><di ky=\"31\" rd=\"Battery_Level_Error.htm|Battery Level Error\" ct=\"    Name Values Description BATTERY_LEVEL_ERROR   -1 Battery level could not be obtained       ...\" bc=\"\"/><di ky=\"32\" rd=\"Battery_Threshold_Identifiers.htm|Battery Threshold Identifiers\" ct=\"  Name Description BATTERY_MAIN_TH_HIGH_LOW Identifier for the threshold level between the High and  ...\" bc=\"\"/><di ky=\"33\" rd=\"Beacon_Constants.htm|Beacon Constants\" ct=\"Beacon  Constants     	 	 	 		 Name 		 Value 	 	 		 BLE_ADDR_STR_SIZE 		 15 	 	 		 BLE_UUID_SIZE 		 ...\" bc=\"\"/><di ky=\"34\" rd=\"BeaconFlush.htm|BeaconFlush\" ct=\"  Flushes any pending  beacon data.   	 		 BOOL cdecl BeaconFlush(); 	   Return Value On  success, r ...\" bc=\"\"/><di ky=\"35\" rd=\"BeaconGetData.htm|BeaconGetData\" ct=\"  This  function should be called by an application after it’s registered event  has been signaled. ...\" bc=\"\"/><di ky=\"36\" rd=\"BeaconStartScan.htm|BeaconStartScan\" ct=\"  This  will cause beacon scanning to start, if it has not been already started.   	 		 HANDLE cdecl ...\" bc=\"\"/><di ky=\"37\" rd=\"BeaconStopScan.htm|BeaconStopScan\" ct=\"  This  will cause beacon scanning to stop, if no other applications are registered.     	 		 BOOL c ...\" bc=\"\"/><di ky=\"38\" rd=\"Beep_Time.htm|Beep Time\" ct=\"    Name Values Description TIME_70MS 0 Tone played for 70ms TIME_130MS   1 Tone played for 130ms   ...\" bc=\"\"/><di ky=\"39\" rd=\"Beep_Tone.htm|Beep Tone\" ct=\"    Name Values Description TONE_2400HZ 0 Tone played at 2400Hz (Default) TONE_2600HZ   1 Tone playe ...\" bc=\"\"/><di ky=\"40\" rd=\"BEEPER_VOLUME.htm|BEEPER_VOLUME\" ct=\"  public static final int  BEEPER_VOLUME   Constant Field Value: 65312 ...\" bc=\"\"/><di ky=\"41\" rd=\"BeepTime.htm|BeepTime\" ct=\"Datalogic .NET SDK BeepTime(Enumeration)   Syntax    public   enum   BeepTime :   int    {        T7 ...\" bc=\"\"/><di ky=\"42\" rd=\"BeepTone.htm|BeepTone\" ct=\"Datalogic .NET SDK BeepTone(Enumeration)   Syntax    public   enum   BeepTone :   int    {        F2 ...\" bc=\"\"/><di ky=\"43\" rd=\"BlinkLED.htm|BlinkLED\" ct=\"Datalogic .NET SDK BlinkLED   (Method)   Syntax      public   static   Boolean   BlinkLED(LEDs LED,  ...\" bc=\"\"/><di ky=\"44\" rd=\"Bluetooth_Constants_api2.htm|Bluetooth Constants api2\" ct=\"Bluetooth Constants   These are  constant values contained in the header file associated with the De ...\" bc=\"\"/><di ky=\"45\" rd=\"BtClearAllPairings.htm|BtClearAllPairings\" ct=\"  Removes all pairings.   BOOL cdecl BtClearAllPairings( void );     Return Value A value of TRUE is ...\" bc=\"\"/><di ky=\"46\" rd=\"BtClearSerialPairing.htm|BtClearSerialPairing\" ct=\"  Destroys a serial pairing.   BOOL cdecl BtClearSerialPairing( WCHAR *address );     Parameters WCH ...\" bc=\"\"/><di ky=\"47\" rd=\"BtCreatePairing.htm|BtCreatePairing\" ct=\"  Create a pairing based  on a string BT UUID of a device.   	 		 BOOL cdecl BtCreatePairing( 		 WCH ...\" bc=\"\"/><di ky=\"48\" rd=\"btCreateSerialPairing.htm|btCreateSerialPairing\" ct=\"  public static int  btCreateSerialPairing (byte[] addr,                                             ...\" bc=\"\"/><di ky=\"49\" rd=\"BtCreateSerialPairing1.htm|BtCreateSerialPairing1\" ct=\"BtCreateSerialPairing   Creates a serial pairing based on a string BT UUID of a device. BtCreateSeri ...\" bc=\"\"/><di ky=\"50\" rd=\"BTDIRECT.htm|BTDIRECT\" ct=\"  Enum of the  pairing&apos;s direction   	 	 	 		 Name 		 Value 	 	 		 INCOMING 		 0 	 	 		 OUTGOING 		 ...\" bc=\"\"/><di ky=\"51\" rd=\"btEnable.htm|btEnable\" ct=\"  public static boolean  btEnable (boolean Enable)   Turns on or off the Bluetooth radio.   Returns: ...\" bc=\"\"/><di ky=\"52\" rd=\"BtEnable1.htm|BtEnable1\" ct=\"BtEnable   Turns on or off the Bluetooth radio.   BOOL cdecl BtEnable(BOOL on);     Parameters BOOL  ...\" bc=\"\"/><di ky=\"53\" rd=\"btGetPairingCount.htm|btGetPairingCount\" ct=\"  public static int  btGetPairingCount ()   Get number of pairings. Used in conjunction with btGetPa ...\" bc=\"\"/><di ky=\"54\" rd=\"BtGetPairingCount1.htm|BtGetPairingCount1\" ct=\"BtGetPairingCount   Gets number of pairings. Used in conjunction with BtGetPairingInfo(…).   DWORD c ...\" bc=\"\"/><di ky=\"55\" rd=\"btGetPairingInfo.htm|btGetPairingInfo\" ct=\"  public static byte[]  btGetPairingInfo (int iCount)   Get pairing info for all pairs. Used in conj ...\" bc=\"\"/><di ky=\"56\" rd=\"BtGetPairingInfo1.htm|BtGetPairingInfo1\" ct=\"BtGetPairingInfo   Gets pairing info for  all pairs. Used in conjunction with BtGetPairingCount().   ...\" bc=\"\"/><di ky=\"57\" rd=\"BtGetRadioInfo.htm|BtGetRadioInfo\" ct=\"  Gets bluetooth radio  info, as returned in a BT_DEVICE structure.   	 		 BOOL cdecl BtGetRadioInfo ...\" bc=\"\"/><di ky=\"58\" rd=\"btInitialize.htm|btInitialize\" ct=\"  public static int  btInitialize ()   Initialize the Bluetooth driver.   Returns: On success, the v ...\" bc=\"\"/></ck>";